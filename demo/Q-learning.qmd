---
title: "Q-learning Demo"
format: html
editor: visual
---

## Q-learning Demo using ADHD data

This file provides example R code to analyze \*simulated\* data that was generated to mimic data arising from the ADHD SMART study (PI: William Pelham). An accompanying handout ("ADHD Handout.pdf") describes the variables in the data.

## Setup

```{r setup}
#| echo: true
#| results: hide
#| warning: false

library(CATIE2023)
library(geepack)
library(tidyverse)
library(emmeans)
```

### Load data

```{r}

adhd <- CATIE2023::adhd
#adhd <- CATIE2023::simADHDsmart()

# Fill NA with zero
adhd[is.na(adhd)] <- 0

# Grand mean center all covariates
adhd.c <- adhd %>% mutate(across(c(odd, severity, priormed, race, adherence, NRtime),  ~ .x - mean(.x, na.rm = TRUE), .names = "{.col}.c"), )

# Filter to non-responders, then center among non-responders
adhd.nr.c <- adhd %>% filter(R == 0) %>%
  mutate(across(.cols = c(2:5, NRtime, adherence), ~ .x - mean(.x), .names = "{.col}.c"))
```

## Examine moderators of second-stage treatment effect

Remember that Step 1 of Q-learning is to understand how intermediate outcomes can be used to make second-stage decisions about intensifying vs. augmenting. Investigating potential moderators in this way will help us tailor the second-stage intervention for non-responders based on the status of the participants up to the point of non-response. We are only able to investigate non-responders since those were the only individuals who were re-randomized. Because all responders in this study continued on their first-stage intervention, we are unable to assess whether a different tactic would be better for some responders.

We'll start by fitting a **moderated regression model** using the data from non-responders. The goal is to discover if we can use *the initial treatment* `a1` and *adherence to initial treatment* `adherence` to select a tactic for non-responders, adjusting for baseline covariates. The model is as follows:

$$ \begin{gather} E[Y \mid \mathbf{X}, A_1, adherence, A_2, R = 0] = \beta_0 + \beta_1 odd_{cnr} + \beta_2 severity_{cnr} + \beta_3 priormed_{cnr} + \beta_4 race_{cnr}  \\+ \beta_5 A_{1} + \beta_6 adherence + \beta_7 A_2 + \beta_8 (A_2 \times A_1) + \beta_{9} (A_2 \times adherence)
\end{gather}$$

Pay particular attention to $\beta_5$, $\beta_6$, $\beta_8$, and $\beta_{9}$, as these represent the main effects and interactions (with second-stage intervention), respectively, of the two moderators we are interested in for this analysis. Let's fit the model:

## Fit model to the subset of non-responders

```{r}

# Use the data set that mean centers among non responders, this gives main effects
model2s <- adhd.nr.c %>%geepack::geeglm(Y2 ~ odd.c + severity.c + priormed.c 
                                        + race.c + adherence + A1*A2 + 
                                          A2:adherence, id = ID, data = .)

summary(model2s)

```

Here we find that `adherence` is a significant moderator of stage 2 treatment $A_2$, but $A_1$ is not. The sign on $\beta_9$ is positive, suggesting that those that are adherent would benefit from intensifying treatment ($A_2 = 1$). Likewise, the sign of $\beta_7$ is negative suggesting those that are non-adherent would benefit from Augmenting ($A_2 = -1$)

## Interaction plot of moderators of stage 2

We will use a very powerful package called `emmeans` to estimate the marginal means given a set of factors

```{r}

#grid <- emmeans::ref_grid(model2s, cov.keep = c("A1","A2", "adherence"))
em2 <- emmeans::emmeans(model2s, ~ A1 + A2 | adherence) # do we need weights=?

ep2 <- emmeans::emmip(em2, A1 + A2 ~ adherence, style = "factor")


mytheme <- theme_classic() + 
  theme(axis.text=element_text(size=14),
        axis.title=element_text(size=16),
        legend.text = element_text(size=16),
        legend.title = element_text(size=16),
        plot.title = element_text(size=20))

ep2$data %>% mutate(across(1:3, as.factor)) %>%
  ggplot(aes(xvar, yvar, color = A2, linetype = A1, group = tvar)) +
  geom_line(linewidth = 1) +
  geom_point() +
  scale_color_manual("A2", values = c("-1" = "darkgreen", "1" = "purple"), 
                     labels = c("-1" = "-1 AUG", "1" = "1 INT")) +
  scale_linetype_manual("A1", values = c("-1" = 1,"1" = 6), 
                        labels = c("-1" = "-1 MED", "1" = "1 BMOD")) +
  mytheme +
  labs(title = "Effect of stage 2 treatment among non-responders by adherence",
       x = "Adherence to stage 1",
       y = "EOS School Performance \n (higher is better)") +
  scale_x_discrete(labels = c("Non-adherent", "Adherent")) +
  scale_y_continuous(n.breaks = 6)
  

ggsave("moderators_second_stage.pdf", width = 12, height = 6)
```

### Pairs of contrasts

Here we contrast the effect of second stage tactic controlling for first-stage and levels of adherence.

```{r}

emmeans::contrast(em2, simple = "A2", method = "revpairwise")

```

## Q-learning

Here we find the optimal second-stage tactic given first-stage treatment and levels of adherence.

```{r}

## VERSION 2: Argmax of Expected Value

# Using full centered dataset filter to non-responders
adhd.c.nr <- adhd.c %>% filter(R == 0)

# fit model to non-responders
Qmod2s <-  adhd.c.nr %>%
 geepack::geeglm(Y2 ~ odd.c + severity.c + priormed.c + race.c + 
           adherence + A1*A2 + A2:adherence, 
         id = ID, data = .)

# Make conterfactual dataframe
adhd.c.nr.alt <- adhd.c.nr %>% mutate(A2 = -1 * A2)
adhd.c.nr.opt <- adhd.c.nr # dataframe to store optimal tactic
adhd.c.nr.opt$Y2 <- fitted(Qmod2s)

adhd.c.nr.alt$Y2 <- predict(Qmod2s, newdata = adhd.c.nr.alt) # predict response on counterfactual a2


### greater of COUNTERFACTUAL or FITTED
cf <- adhd.c.nr.alt$Y2 > adhd.c.nr.opt$Y2
adhd.c.nr.opt[cf, ] <- adhd.c.nr.alt[cf, ]

# Combine optimal non-responders with responders
adhd.c.opt <- adhd.c %>% filter(R == 1) %>%
  bind_rows(adhd.c.nr.opt)

# Look at second stage only. First stage coeffs will be biased.
summary(Qmod2s)
```

Now we fit a model for the first stage on the dataset with optimal second stage. Interact first stage treatment with levels of prior med.

```{r}

# Fit first-stage model on full dataset (controlling for optimal second-stage tactic)
Qmod1s <- adhd.c.opt %>%geepack::geeglm(Y2 ~ odd.c + severity.c + priormed + race.c + A1 + A1:priormed, id = ID, data = .)
summary(Qmod1s)
```

### Interaction plot of first-stage treatment options

```{r}
em1 <- emmeans::emmeans(Qmod1s, ~ A1 | priormed, weights = "equal")

ep1 <- emmeans::emmip(em1, A1 ~ priormed, style = "factor")

# ep1 + scale_color_manual("A1", values = c("-1" = "red", "1" = "blue"), 
#                      labels = c("-1" = "-1 MED", "1" = "1 BMOD")) +
#   geom_line(size=1)
#   mytheme +
#   scale_size_manual(values = c(2,2)) +
#   labs(title = "Moderators of stage 1 treatment controlling for optimal stage 2",
#        x = "Levels of Adherence",
#        y = "EOS School Performance \n (higher is better)")
  
ep1$data %>% mutate(across(1:2, as.factor)) %>%
  ggplot(aes(xvar, yvar, color = A1, group = tvar)) +
  geom_line(linewidth = 1) +
  geom_point() +
  scale_color_manual("A1", values = c("-1" = "red", "1" = "blue"), 
                     labels = c("-1" = "-1 MED", "1" = "1 BMOD")) +
  mytheme +
  labs(title = "Moderators of stage 1 treatment controlling for optimal stage 2",
       x = "Medication use in Prior year",
       y = "EOS School Performance \n (higher is better)") +
  scale_x_discrete(labels = c("No prior med", "Prior med")) +
  scale_y_continuous(n.breaks = 6)

ggsave("optimal_first_stage.pdf", width = 12, height = 6, )
```

## Qlaci Package

```{r}
#| warning: false
#| include: false
#devtools::install_github("d3lab-isr/qlaci")


```

```{r}

pPM <- mean(adhd.c$priormed)

## contrast matrix - we must transpose this for qlaci
c1 <-
  rbind("Mean Y under bmod, prior med"          = c(1, rep(0, 3), 1,  1,  1),
        "Mean Y under med, prior med"           = c(1, rep(0, 3), 1, -1, -1),
        "Mean diff (bmod-med) for prior med"    = c(0, rep(0, 3), 0,  2,  2),
        "Mean Y under bmod, no prior med"       = c(1, rep(0, 3), 0,  1,  0),
        "Mean Y under med, no prior med"        = c(1, rep(0, 3), 0,  -1, 0),
        "Mean diff (bmod-med) for no prior med" = c(0, rep(0, 3), 0,  2,  0),
        "Mean Y Optimal DTR"                    = c(1, rep(0, 3), pPM,  1-2*pPM, -pPM))

```

```{r}

q1 <- qlaci::qlaci(H10 = with(adhd.c, cbind(1, odd.c, severity.c, race.c, priormed)),
                   H11 = with(adhd.c, cbind(A1 = 1, "A1:priormed" = priormed)),
                   A1 = adhd.c$A1,
                   Y1 = rep(0, nrow(adhd.c)), # set to zero for everyone; we care only about EOS outcome
                   H20 = with(adhd.c, cbind(1, odd.c, severity.c, race.c, priormed, A1, adherence)),
                   H21 = with(adhd.c, cbind(A2 = 1, "A1:A2" = A1, "A2:adherence" = adherence)),
                   A2 = adhd.c$A2,
                   Y2 = adhd.c$Y2,
                   S = 1 - adhd.c$R,
                   c1 = t(c1)
)
                   
                   
```

Qlaci results

```{r}
q1
q1$ci1 %>% kableExtra::kable(digits = 2, caption = "Estimated optimal AI tailoring on prior med and adherence")
```
